<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><title>STM32F10x Firmware Library Package</title>

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"></head>
<body><br>
<table align="center" border="0" cellpadding="0" cellspacing="0" width="900">
<tbody>
<tr valign="top">
<td>
<table width="100%">
<tbody>
<tr>
<td align="right"><img alt="STM32 Releasing your creativity" src="resc/stm32_ryc.jpg" height="85" width="900"></td>
</tr>
</tbody>
</table>
<br>
<table border="0" cellpadding="2" cellspacing="0" width="900">
<tbody>
<tr>
<td class="tabtitle"><strong><font color="#000000" face="Arial, Helvetica, sans-serif" size="4">Easy-to-use Firmware Library for STM32</font></strong></td>
</tr>
</tbody>
</table>
<table border="0" cellpadding="0" cellspacing="2" width="900">
<tbody>
<tr>
<td valign="top">
<p><font face="Arial, Helvetica, sans-serif" size="2">The <strong>STM32F10x Firmware Library</strong>
</font><font face="Arial, Helvetica, sans-serif" size="2">is complete package, consisting
of device drivers for all of the standard device peripherals, for the
Low-<a href="#1"><sup>1</sup></a>, Medium-<a href="#2"><sup>2</sup></a> and High-density<a href="#3"><sup>3</sup></a> STM32F101xx and STM32F103xx advanced
ARM-based 32-bit MCUs.</font></p>
<p><font face="Arial, Helvetica, sans-serif" size="2">This library is a firmware package which contains a
collection of routines, data structures and macros covering the
features of all peripherals. It includes a description of the device
drivers plus a set of examples for each peripheral.&nbsp;</font><font face="Arial, Helvetica, sans-serif" size="2">Each
device driver includes a set of functions covering full
peripheral&nbsp;</font><font face="Arial, Helvetica, sans-serif" size="2">functionalities</font><font face="Arial, Helvetica, sans-serif" size="2">. The
source code, developed in C language, is highly
documented and thoroughly tested.&nbsp;</font></p>
<p><font face="Arial, Helvetica, sans-serif" size="2">The development of
each driver is driven by a common API (application programming
interface) which standardizes the driver structure, the functions and
the names of parameters. The driver source code is developed in &#8216;Strict
ANSI-C&#8217; (relaxed ANSI-C for projects and examples files). It is fully
documented and is MISRA-C 2004 compliant (the compliancy matrix is
available upon request). Writing the whole library in &#8216;Strict ANSI-C&#8217;
makes it independent from the software toolchain. Only the start-up
files depend on the toolchain. The firmware library implements run-time
failure detection by checking the input values for all library
functions. This dynamic checking contributes to enhance the robustness
of the software. Run-time detection is suitable for user application
development and debugging. It adds an overhead and can be removed from
the final application code to minimize code size and execution
speed.&nbsp;Since the firmware library is <span style="font-weight: bold;">generic and covers all
peripherals
functionalities</span>, the size and/or execution speed of the
application
code may not be optimized. For many applications, the library may be
used as is. However, for applications having tough constraints in terms
of code size and/or execution speed, the library drivers should be used
as a reference on how to configure the peripheral and tailor them to
specific application requirements.</font></p>
<p><font face="Arial, Helvetica, sans-serif" size="2">The firmware library allows any device to be used
in the user application without the need for in-depth study of each
peripheral specifications. As a result, using the firmware library <span style="font-weight: bold;">saves significant time</span>
that would otherwise be spent in coding, while <span style="font-weight: bold;">reducing the application
development and integration cost</span>.<br>
</font></p>
<p><font face="Arial, Helvetica, sans-serif" size="2">For more details about this Firmware Library,
please refer to the User manual "UM0427 ARM®-based 32-bit MCU
STM32F101xx and STM32F103xx Firmware Library" available for download
from the ST microcontrollers website: <a href="http://www.st.com/stm32">www.st.com/stm32</a></font></p>


<p><font face="Arial, Helvetica, sans-serif" size="2"><span style="font-weight: bold; color: black;">Peripheral Examples</span><br>The Firmware library provide a rich set of examples covering the main features of each peripheral. </font><font face="Arial, Helvetica, sans-serif" size="2">All the examples are independent from the software
toolchain.&nbsp;</font><font face="Arial, Helvetica, sans-serif" size="2"><font face="Arial, Helvetica, sans-serif" size="2">These examples run on
STMicroelectronics STM3210B-EVAL and STM3210E-EVAL evaluation boards
and can be easily tailored to any other hardware. </font></font><font face="Arial, Helvetica, sans-serif" size="2">Only
source files are provided for each example and user can tailor the
provided&nbsp;project template to run the selected example with his
prefferred tool chain; <a href="resc/stm32f10xfwlib_examples.htm">more details... </a><br></font></p><p><font face="Arial, Helvetica, sans-serif" size="2">The package contains the following examples: </font></p>
<font face="Arial, Helvetica, sans-serif" size="2">

<table border="0" cellpadding="0" cellspacing="5" width="100%">
<tbody>
<tr valign="top">
<td height="42">
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr valign="top">
<td height="18" width="93">&nbsp;</td>
<td height="18" width="18">&nbsp;</td>
<td height="18" width="192">&nbsp;</td>
<td height="18">&nbsp;</td>
</tr>
<tr>
<td colspan="1" rowspan="1" height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>ADC</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CADC%5C3ADCs_DMA">3ADCs_DMA</a></font></font></td>
<td height="26" width="79%"><font size="2">Use 3ADCs in independant continuous conversion mode
with ADC1 and ADC3 using DMA transfer from ADC1 and ADC3 to data
buffers.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font size="2"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CADC%5CADC1_DMA">ADC1_DMA</a></font></font></td>
<td height="26" width="79%"><font size="2">Use the ADC and DMA to transfer continuously
converted data from ADC to a data buffer.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font size="2"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CADC%5CAnalogWatchdog">AnalogWatchdog</a></font></font></td>
<td height="26" width="79%"><font size="2">Use the ADC analog watchdog to guard continuously
an ADC channel.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font size="2"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CADC%5CExtLinesTrigger">ExtLinesTrigger</a></font></font></td>
<td height="26" width="79%"><font size="2">Trigger ADC regular and injected groups channel
conversion using two external line event.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font size="2"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CADC%5CRegSimul_DualMode">RegSimul_DualMode</a></font></font></td>
<td height="26" width="79%"><font size="2">Use ADC1 and ADC2 in regular simultaneous dual mode</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font size="2"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CADC%5CTIMTrigger_AutoInjection">ExTIMTrigger_AutoInjection</a></font></font></td>
<td height="26" width="79%"><font size="2">Convert ADC regular group channels continuously
using TIM1 external trigger and injected group channels using the
auto-injected feature.</font></td>
</tr>
<tr>
<td height="22" width="93"></td>
<td height="22" width="18"></td>
<td height="22" width="192"></td>
<td height="22" width="79%"></td>
</tr>
<tr valign="top">
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>BKP</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CBKP%5CBackup_Data">Backup_Data</a></font></td>
<td height="26" width="79%"><font face="Arial, Helvetica, sans-serif" size="2"> Store
user data in the Backup data registers.</font></td>
</tr>
<tr valign="top">
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2">&nbsp;</font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CBKP%5CTamper">Tamper</a></font></td>
<td height="26"><font face="Arial, Helvetica, sans-serif" size="2">
Write/read data to/from Backup data registers and demonstrates the
Tamper detection feature.</font></td>
</tr>
<tr valign="top">
<td height="22" width="93">&nbsp;</td>
<td height="22" width="18">&nbsp;</td>
<td height="22" width="192">&nbsp;</td>
<td height="22"><font face="Arial, Helvetica, sans-serif" size="2">&nbsp;</font></td>
</tr>
<tr valign="top">
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>CAN</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CCAN">Example</a></font></td>
<td height="26" width="79%"><font face="Arial, Helvetica, sans-serif" size="2">Set a
communication with the bxCAN in loopback mode.</font></td>
</tr>
<tr valign="top">
<td height="22" width="93">&nbsp;</td>
<td height="22" width="18">&nbsp;</td>
<td height="22" width="192">&nbsp;</td>
<td height="22"><font face="Arial, Helvetica, sans-serif" size="2">&nbsp;</font></td>
</tr>
<tr valign="top">
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>CortexM3</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CCortexM3%5CBitBand">BitBand</a></font></td>
<td height="26" width="79%"><font face="Arial, Helvetica, sans-serif" size="2"> Use
CortexM3 Bit-Band access to perform atomic read-modify-write and read
operations on a variable in SRAM.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CCortexM3%5CMode_Privilege">Mode_Privilege</a></font></td>
<td height="26" width="79%"><font size="2">Modify CortexM3 Thread mode privilege access and
stack.</font></td>
</tr>
<tr valign="top">
<td colspan="1" rowspan="1" height="22" width="93">&nbsp;</td>
<td height="22" width="18">&nbsp;</td>
<td height="22" width="192">&nbsp;</td>
<td height="22"><font face="Arial, Helvetica, sans-serif" size="2">&nbsp;</font></td>
</tr>
<tr valign="top">
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>CRC</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CCRC">Example</a></font></td>
<td height="26" width="79%"><font face="Arial, Helvetica, sans-serif" size="2">Use the
CRC calculation unit to get a CRC code of a given buffer of data
word(32-bit).</font></td>
</tr>
<tr valign="top">
<td height="22" width="93">&nbsp;</td>
<td height="22" width="18">&nbsp;</td>
<td height="22" width="192">&nbsp;</td>
<td height="22"><font face="Arial, Helvetica, sans-serif" size="2">&nbsp;</font></td>
</tr>
<tr valign="top">
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>DAC</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CDAC%5CDualModeDMA_SineWave" target="">DualModeDMA_SineWave</a></font></td>
<td height="26" width="79%"><font face="Arial, Helvetica, sans-serif" size="2">&nbsp;Use
DAC channels in dual mode with DMA to generate the same sine wave
signal in 12bit right data alignment mode. </font> </td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CDAC%5COneChannel_NoiseWave" target="">OneChannel_NoiseWave</a></font></td>
<td height="26" width="79%"><font size="2">Use DAC channel1 to generate a fixed signal with
noise wave in 12bit left data alignment mode.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CDAC%5COneChannelDMA_Escalator" target="">OneChannelDMA_Escalator</a></font></td>
<td height="26" width="79%"><font size="2">Use DAC channel1 with DMA to generate an escalator
signal in 8bit right alignment mode</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CDAC%5CTwoChannels_TriangleWave" target="">TwoChannels_TriangleWave</a></font></td>
<td height="26" width="79%"><font size="2">Use DAC channels separately to generate two signals
with different triangle waves in 12bit right data alignment mode.</font></td>
</tr>
<tr>
<td height="22" width="93"></td>
<td height="22" width="18"></td>
<td height="22" width="192"></td>
<td height="22" width="79%"></td>
</tr>
<tr>
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>DMA</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CDMA%5CADC_TIM1" target="">ADC_TIM1</a></font></td>
<td height="26" width="79%"><font size="2">Use a DMA channel to transfer continuously a data
from a peripheral (ADC) to another (TIM1) supporting DMA transfer.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CDMA%5CFLASH_RAM" target="">FLASH_RAM</a></font></td>
<td height="26" width="79%"><font size="2">Use a DMA channel to transfer a word data buffer
from memory (Flash) to memory (RAM).</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CDMA%5CFSMC">FSMC</a></font></td>
<td height="26" width="79%"><font size="2">Use two DMA1 channels to transfer a word data
buffer from embedded FLASH to external memory through FSMC and from
this external memory to embedded RAM.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CDMA%5CI2C_RAM">I2C_RAM</a></font></td>
<td height="26" width="79%"><font size="2">Use two DMA channels to transfer a data buffer from
memory to I2C2 through I2C1.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CDMA%5CSPI_RAM">SPI_RAM</a></font></td>
<td height="26" width="79%"><font size="2">Use four DMA channels to transfer a data buffer
from memory to SPI2 through SPI1 and a second data buffer from memory
to SPI1 through SPI2 in full-duplex mode.</font></td>
</tr>
<tr>
<td height="22" width="93"></td>
<td height="22" width="18"></td>
<td height="22" width="192"></td>
<td height="22" width="79%"></td>
</tr>
<tr>
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img id="IMG1" src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>EXTI</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CEXTI">Example</a></font></td>
<td height="26" width="79%"><font size="2">Configure an external interrupt line.</font></td>
</tr>
<tr>
<td height="22" width="93"></td>
<td height="22" width="18"></td>
<td height="22" width="192"></td>
<td height="22" width="79%"></td>
</tr>
<tr>
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>FLASH</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CFLASH%5CProgram">Program</a></font></td>
<td height="26" width="79%"><font size="2">Program the STM32F10x FLASH.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CFLASH%5CWrite_Protection">Write_Protection</a></font></td>
<td height="26" width="79%"><font size="2">Enable and disable the write protection for the
STM32F10x FLASH.</font></td>
</tr>
<tr>
<td height="22" width="93"></td>
<td height="22" width="18"></td>
<td height="22" width="192"></td>
<td height="22" width="79%"></td>
</tr>
<tr>
<td colspan="1" rowspan="1" height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>FSMC</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CFSMC%5CNAND">NAND</a></font></td>
<td height="26" width="79%"><font size="2">Use the FSMC firmware library and an associate
driver to communicate with a 8-Bit NAND memory: NAND512W3A2. Write into
all memory, Read and verify the contents. </font> </td>
</tr>
<tr>
<td height="40" width="93"></td>
<td height="40" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="40" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CFSMC%5CNOR">NOR</a></font></td>
<td height="40" width="79%"><font size="2">Use the FSMC firmware library and an associate
driver to communicate with a 16-Bit NOR memory: M29W128FL,
M29W128GL&nbsp;or&nbsp;S29GL128P. Write into all memory, Read
and verify the contents . </font> </td>
</tr>
<tr>
<td height="42" width="93"></td>
<td height="42" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="42" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CFSMC%5CNOR_CodeExecute">NOR_CodeExecute</a></font></td>
<td height="42" width="79%"><font size="2">Build an application to be loaded into the NOR
memory mounted on STM3210E-EVAL board then execute it from internal
Flash.</font></td>
</tr>
<tr>
<td height="42" width="93"></td>
<td height="42" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="42" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CFSMC%5CSRAM">SRAM</a></font></td>
<td height="42" width="79%"><font size="2">Use the FSMC firmware library and an associate
driver to communicate with a 16-Bit SRAM memory: IS61WV51216BLL. Write
into all memory, Read and verify the contents.</font></td>
</tr>
<tr>
<td height="42" width="93"></td>
<td height="42" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="42" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CFSMC%5CSRAM_DataMemory">SRAM_DataMemory</a></font></td>
<td height="42" width="79%"><font size="2">Use the external SRAM mounted on STM3210E-EVAL
board as program data memory and internal SRAM for Stack.</font></td>
</tr>
<tr>
<td height="22" width="93"></td>
<td height="22" width="18"></td>
<td height="22" width="192"></td>
<td height="22" width="79%"></td>
</tr>
<tr>
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>GPIO</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CGPIO%5CIOToggle">IOToggle</a></font></td>
<td height="26" width="79%"><font size="2">Use the GPIO BSRR (Port bit set/reset register) and
BRR (Port bit reset register) for IO toggling. These registers allow
modifying only one or several GPIO pins in a single atomic write access.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CGPIO%5CJTAG_Remap">JTAG_Remap</a></font></td>
<td height="26" width="79%"><font size="2">Use the JTAG IOs as standard GPIOs and gives a
configuration sequence.</font></td>
</tr>
<tr>
<td height="22" width="93"></td>
<td height="22" width="18"></td>
<td height="22" width="192"></td>
<td height="22" width="79%"></td>
</tr>
<tr>
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>I2C</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CI2C%5C10bitAddress">10bitAddress</a></font></td>
<td height="26" width="79%"><font size="2">Transfer a data buffer from I2C1 to I2C2 in 10-bit
addressing mode.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CI2C%5CDualAddress">DualAddress</a></font></td>
<td height="26" width="79%"><font size="2">Transfer two data buffer from I2C1 to I2C2 through
its two addresses in the same application.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CI2C%5CInterrupt">Interrupt</a></font></td>
<td height="26" width="79%"><font size="2">Transfer a data buffer from master transmitter
(I2C1)&nbsp;to slave receiver (I2C2)&nbsp;and from slave
transmitter (I2C2)&nbsp;to master receiver (I2C1)&nbsp;using
interrupts.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CI2C%5CM24C08_EEPROM">M24C08_EEPROM</a></font></td>
<td height="26" width="79%"><font size="2">Use the I2C firmware library and an associate I2C
EEPROM driver to communicate with an M24C08 EEPROM.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CI2C%5CSMBus">SMBus</a></font></td>
<td height="26" width="79%"><font size="2">Send an ARP command from I2C1 to I2C2 in SMBus mode.</font></td>
</tr>
<tr>
<td height="22" width="93"></td>
<td height="22" width="18"></td>
<td height="22" width="192"></td>
<td height="22" width="79%"></td>
</tr>
<tr>
<td colspan="1" rowspan="1" height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>I2S</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CI2S%5CInterrupt">Interrupt</a></font></td>
<td height="26" width="79%"><font size="2">Describe how to configure and use the I2S mode
interrupts with 16bits and 24 bits data in 32 bits packet frames.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CI2S%5CSPI_I2S_Switch">SPI_I2S_Switch</a></font></td>
<td height="26" width="79%"><font size="2">Describe how to configure and use the I2S mode in
alternation with the SPI maode. Simple communication is performed
between two SPIs then between two I2Ss (raw data transfer and
verification).</font></td>
</tr>
<tr>
<td height="22" width="93"></td>
<td height="22" width="18"></td>
<td height="22" width="192"></td>
<td height="22" width="79%"></td>
</tr>
<tr>
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>IWDG</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CIWDG">Example</a></font></td>
<td height="26" width="79%"><font size="2">Reload at regulate period the IWDG counter using
the SysTick interrupt.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"></td>
<td height="26" width="192"></td>
<td height="26" width="79%"></td>
</tr>
<tr>
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>LIB_DEBUG</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CLib_DEBUG">Example</a></font></td>
<td height="26" width="79%"><font size="2">Demonstrates the STM32F10x Firmware Library DEBUG
mode. When the Debug mode is selected, the assert macro is expanded and
run time checking is enabled in the firmware library code. The run-time
checking allows checking that all the library functions input value
lies within the parameter allowed values.</font></td>
</tr>
<tr>
<td height="22" width="93"></td>
<td height="22" width="18"></td>
<td height="22" width="192"></td>
<td height="22" width="79%"></td>
</tr>
<tr>
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>NVIC</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CNVIC%5CCM3_LPModes">CM3_LPModes</a></font></td>
<td height="26" width="79%"><font size="2">Use the NVIC firmware library to demonstrate the
Cortex-M3 low power modes capabilities (WFE and WFI).</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CNVIC%5CDMA_WFIMode">DMA_WFIMode</a></font></td>
<td height="26" width="79%"><font size="2">Enter the system to WFI mode with DMA transfer
enabled and wake-up from this mode by the DMA End of Transfer interrupt.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CNVIC%5CIRQ_Channels">IRQ_Channels</a></font></td>
<td height="26" width="79%"><font size="2">Use of the Nested Vectored Interrupt Controller
(NVIC) and IRQ Channels configuration.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CNVIC%5CPriority">Priority</a></font></td>
<td height="26" width="79%"><font size="2">Use of the Nested Vectored Interrupt Controller
(NVIC) and priority mechanism (PreemptionPriority , SubPriority).</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CNVIC%5CSystem_Handlers">System_Handlers</a></font></td>
<td height="26" width="79%"><font size="2">Use of the Nested Vectored Interrupt Controller
(NVIC) and system handlers.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CNVIC%5CVectorTable_Relocation">VectorTable_Relocation</a></font></td>
<td height="26" width="79%"><font size="2">Use the NVIC firmware library to set the CortexM3
vector table in a specific address other than default. This can be used
to build program which will be loaded into Flash memory by an
application previously programmed in the sector0 of the Flash memory.
Such application can be In-Application Programming (IAP, through USART)
or Device Firmware Upgrade (DFU, through USB).</font></td>
</tr>
<tr>
<td height="22" width="93"></td>
<td height="22" width="18"></td>
<td height="22" width="192"></td>
<td height="22" width="79%"></td>
</tr>
<tr>
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>PWR</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CPWR%5CSTANDBY">STANDBY</a></font></td>
<td height="26" width="79%"><font size="2">Enter the system to STANDBY mode and wake-up from
this mode using: external RESET, RTC Alarm or WKUP pin.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CPWR%5CSTOP">STOP</a></font></td>
<td height="26" width="79%"><font size="2">Enter the system to STOP mode and wake-up using
EXTI Line interrupts. The EXTI Line sources are&nbsp;Key
Button&nbsp;and RTC Alarm.</font></td>
</tr>
<tr>
<td height="22" width="93"></td>
<td height="22" width="18"></td>
<td height="22" width="192"></td>
<td height="22" width="79%"></td>
</tr>
<tr>
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>RCC</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CRCC">Example</a></font></td>
<td height="26" width="79%"><font size="2">Configure the system clock source, AHB, APB2 and
APB1 prescaler. It demonstrates also the Clock Security System (CSS)
which handles the High Speed External clock (HSE) failure detection and
system clock back-up.</font></td>
</tr>
<tr>
<td height="22" width="93"></td>
<td height="22" width="18"></td>
<td height="22" width="192"></td>
<td height="22" width="79%"></td>
</tr>
<tr>
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>RTC</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CRTC%5CCalendar">Calendar</a></font></td>
<td height="26" width="79%"><font size="2">Explain how to use the RTC peripheral. As an
application example, it demonstrates how to setup the RTC peripheral,
in terms of prescaler and interrupts, to be used to keep time and to
generate Second interrupt.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CRTC%5CLSI_Calib">LSI_Calib</a></font></td>
<td height="26" width="79%"><font size="2">Describe how to use the LSI calibration to get RTC
accurate time base.</font></td>
</tr>
<tr>
<td height="22" width="93"></td>
<td height="22" width="18"></td>
<td height="22" width="192"></td>
<td height="22" width="79%"></td>
</tr>
<tr>
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>SDIO</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CSDIO">Example</a></font></td>
<td height="26" width="79%"><font size="2">Use the SDIO firmware library and an associate
driver to perform read/write operations on the SD Card memory.</font></td>
</tr>
<tr>
<td height="22" width="93"></td>
<td height="22" width="18"></td>
<td height="22" width="192"></td>
<td height="22" width="79%"></td>
</tr>
<tr>
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>SPI</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CSPI%5CCRC">CRC</a></font></td>
<td height="26" width="79%"><font size="2">Set a communication between two SPIs in full-duplex
mode and performs a transfer from Master to Slave and Slave to Master
followed by CRC transmission.</font></td>
</tr>
<tr>
<td height="42" width="93"></td>
<td height="42" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="42" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CSPI%5CDMA">DMA</a></font></td>
<td height="42" width="79%"><font size="2">Set a communication between the two SPIs in simplex
mode and performs a transfer from Master in polling mode to the Slave
in DMA receive mode. The NSS pin is managed by hardware.</font></td>
</tr>
<tr>
<td height="42" width="93"></td>
<td height="42" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="42" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CSPI%5CFullDuplex_SoftNSS">FullDuplex_SoftNSS</a></font></td>
<td height="42" width="79%"><font size="2">Set a communication between the two SPIs in
full-duplex mode and performs a transfer from Master to Slave and then
Slave to Master in the same application with software NSS management.</font></td>
</tr>
<tr>
<td height="42" width="93"></td>
<td height="42" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="42" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CSPI%5CM25P64_FLASH">M25P64_FLASH</a></font></td>
<td height="42" width="79%"><font size="2">Use the SPI firmware library and an associated SPI
FLASH driver to communicate with an M25P64 FLASH.</font></td>
</tr>
<tr>
<td height="42" width="93"></td>
<td height="42" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="42" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CSPI%5CSimplex_Interrupt">Simplex_Interrupt</a></font></td>
<td height="42" width="79%"><font size="2">Set a communication between two SPIs in simplex
mode and performs a data buffer transfer from Master to Slave using TxE
interrupt for master and RxNE interrupt for slave.</font></td>
</tr>
<tr>
<td height="22" width="93"></td>
<td height="22" width="18"></td>
<td height="22" width="192"></td>
<td height="22" width="79%"></td>
</tr>
<tr>
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>SysTick</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CSysTick">Example</a></font></td>
<td height="26" width="79%"><font size="2">Configure the SysTick to generate a time base equal
to 1ms.</font></td>
</tr>
<tr>
<td height="22" width="93"></td>
<td height="22" width="18"></td>
<td height="22" width="192"></td>
<td height="22" width="79%"></td>
</tr>
<tr>
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>TIM</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CTIM%5C6Steps">6Steps</a></font></td>
<td height="26" width="79%"><font size="2">Configure the TIM1 peripheral to generate 6 Steps.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CTIM%5C7PWM_Output">7PWM_Output</a></font></td>
<td height="26" width="79%"><font size="2">Configure the TIM1 peripheral to generate 7 PWM
signals with 4 different duty cycles.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CTIM%5CCascade_Synchro">Cascade_Synchro</a></font></td>
<td height="26" width="79%"><font size="2">Synchronize TIM peripherals in cascade mode.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CTIM%5CComplementarySignals">ComplementarySignals</a></font></td>
<td height="26" width="79%"><font size="2">Configure the TIM1 peripheral to generate three
complementary TIM1 signals, to insert a defined dead time value, to use
the break feature and to lock the desired parameters.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CTIM%5CDMA">DMA</a></font></td>
<td height="26" width="79%"><font size="2">Use DMA with TIM1 Update request to transfer Data
from memory to TIM1 Capture Compare Register3.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CTIM%5CExtTrigger_Synchro">ExtTrigger_Synchro</a></font></td>
<td height="26" width="79%"><font size="2">Synchronize TIM peripherals in cascade mode with an
external trigger.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CTIM%5COCActive">OCActive</a></font></td>
<td height="26" width="79%"><font size="2">Configure the TIM peripheral to generate four
different signals with four different delays.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CTIM%5COCInactive">OCInactive</a></font></td>
<td height="26" width="79%"><font size="2">Configure the TIM peripheral in Output Compare
Inactive mode with the corresponding Interrupt requests for each
channel.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CTIM%5COCToggle">OCToggle</a></font></td>
<td height="26" width="79%"><font size="2">Configure the TIM peripheral to generate four
different signals with four different frequencies.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CTIM%5COnePulse">OnePulse</a></font></td>
<td height="26" width="79%"><font size="2">Use the TIM peripheral to generate One pulse after
a Rising edge of an external signal is received in Timer Input pin.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CTIM%5CParallel_Synchro">Parallel_Synchro</a></font></td>
<td height="26" width="79%"><font size="2">Synchronize TIM peripherals in parallel mode.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CTIM%5CPWM_Input">PWM_Input</a></font></td>
<td height="26" width="79%"><font size="2">Use the TIM peripheral to measure the frequency and
duty cycle of an external signal.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CTIM%5CPWM_Output">PWM_Output</a></font></td>
<td height="26" width="79%"><font size="2">Configure the TIM peripheral in PWM (Pulse Width
Modulation) mode.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CTIM%5CTIM1_Synchro">TIM1_Synchro</a></font></td>
<td height="26" width="79%"><font size="2">Synchronize TIM1 and Timers (TIM3 and TIM4) in
parallel mode.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CTIM%5CTimeBase">TimeBase</a></font></td>
<td height="26" width="79%"><font size="2">Configure the TIM peripheral in Output Compare
Timing mode with the corresponding Interrupt requests for each channel
in order to generate 4 different time bases.</font></td>
</tr>
<tr>
<td height="22" width="93"></td>
<td height="22" width="18"></td>
<td height="22" width="192"></td>
<td height="22" width="79%"></td>
</tr>
<tr>
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2">&nbsp;<strong><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong><strong>USART</strong></strong></font></strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CUSART%5CDMA_Interrupt">DMA_Interrupt</a></font></td>
<td height="26" width="79%"><font size="2">Provide a basic communication between USART1 and
USART2 using DMA capability, flags and interrupts.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CUSART%5CDMA_Polling">DMA_Polling</a></font></td>
<td height="26" width="79%"><font size="2">Provide a basic communication between USART1 and
USART2 using DMA capability.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CUSART%5CHalfDuplex">HalfDuplex</a></font></td>
<td height="26" width="79%"><font size="2">Provide a basic communication between USART1 and
USART2 in Half-Duplex mode using flags.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CUSART%5CHyperTerminal_HwFlowControl">HyperTerminal_HwFlowControl</a>&nbsp;</font></td>
<td height="26" width="79%"><font size="2">Use the USART with hardware flow control and
communicate with the Hyperterminal.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CUSART%5CHyperTerminal_Interrupt">HyperTerminal_Interrupt</a></font></td>
<td height="26" width="79%"><font size="2">Use the USART1 interrupts to communicate with the
hyperterminal.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CUSART%5CInterrupt">Interrupt</a></font></td>
<td height="26" width="79%"><font size="2">Provide a basic communication between USART1 and
USART2 using interrupts.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CUSART%5CIrDA">IrDA</a></font></td>
<td height="26" width="79%"><font size="2">Use IrDA mode. Two projects are provided: one for
IrDA transmitter and the second for IrDA receiver</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CUSART%5CMultiProcessor">MultiProcessor</a></font></td>
<td height="26" width="79%"><font size="2">Use the USART in multi-processor mode.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CUSART%5CPolling">Polling</a></font></td>
<td height="26" width="79%"><font size="2">Provide a basic communication between USART1 and
USART2 using flags.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CUSART%5CPrintf">Printf</a></font></td>
<td height="26" width="79%"><font size="2">Retarget the C library printf function to the
USART. </font> </td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CUSART%5CSmartcard">Smartcard</a></font></td>
<td height="26" width="79%"><font size="2">Use the USART in Smart Card mode.</font></td>
</tr>
<tr>
<td height="26" width="93"></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CUSART%5CSynchronous">Synchronous</a></font></td>
<td height="26" width="79%"><font size="2">Provide a basic communication between USART1
(Synchronous mode) and SPI1 using flags.</font></td>
</tr>
<tr>
<td height="22" width="93"></td>
<td height="22" width="18"></td>
<td height="22" width="192"></td>
<td height="22" width="79%"></td>
</tr>
<tr>
<td height="26" width="93"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14">&nbsp;<strong>WWDG</strong></font></td>
<td height="26" width="18"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/bulb16.gif" height="13" width="16"></font></td>
<td height="26" width="192"><font face="Arial, Helvetica, sans-serif" size="2"><a href="FWLib%5Cexamples%5CWWDG">Example</a></font></td>
<td height="26" width="79%"><font size="2">Update at regulate period the WWDG counter using
the Early Wakeup interrupt (EWI).</font></td>
</tr>
</tbody>
</table>
<br><span style="font-style: italic;"></span><font face="Arial, Helvetica, sans-serif" size="2"><span style="font-style: italic;">NOTES:</span></font><br><font face="Arial, Helvetica, sans-serif" size="2"><a name="1"></a>1)
Low-density devices are STM32F101xx and STM32F103xx microcontrollers
where the Flash memory density are 16 or 32 Kbytes.</font>&nbsp;<br><font face="Arial, Helvetica, sans-serif" size="2"><a name="2"></a>2)
Medium-density devices are STM32F101xx and STM32F103xx microcontrollers
where&nbsp;the Flash memory density ranges between 32 and 128 Kbytes.<br></font><font face="Arial, Helvetica, sans-serif" size="2"><a name="3"></a>3)
High-density devices are STM32F101xx and STM32F103xx microcontrollers
where the Flash memory density ranges between 256 and 512 Kbytes.</font><br>
<table border="0" cellpadding="2" cellspacing="0" width="100%">
<tbody>
<tr>
<td class="tabtitle"><strong><font face="Arial, Helvetica, sans-serif" size="4">Firmware
and documents</font></strong></td>
</tr>
</tbody>
</table>
<table border="0" cellpadding="0" cellspacing="5" width="100%">
<tbody>
<tr>
<td width="3%"><font face="Arial, Helvetica, sans-serif" size="2"><img src="resc/ar_s.gif" height="12" width="14"></font></td>
<td width="97%"><font face="Arial, Helvetica, sans-serif" size="2">For
complete documentation refer to <a href="http://www.st.com/stm32" target="_blank">www.st.com/STM32</a><strong> </strong></font>
</td>
</tr>
</tbody>
</table>
</td>
</tr>
<tr valign="top">
<td>&nbsp;</td>
</tr>
</tbody>
</table>
</font></td>
</tr>
</tbody>
</table>
</td>
</tr>
</tbody>
</table>
</body></html>